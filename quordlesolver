import requests
from IPython.display import clear_output 
import ast
r = requests.get('https://raw.githubusercontent.com/thiagnascsilva/myprograms/master/fivelettersword.txt')
r = r.text
num_str = repr(r)
k = 0
join = []
while k < 5757:
  j = num_str[5*k+1] + num_str[5*k+2] + num_str[5*k+3] + num_str[5*k+4] + num_str[5*k+5]
  join.append(j)
  k = k+1

print('Teste DANCE na primeira tentativa.')
print('Sua tentativa.')

i = 0
while i < 9: 
  y = str(input("Dígite seu teste: "))
  print('2 para verde, 3 para amarelo e 4 para preto.')
  num_str2 = repr(y)
  tam = 0
  list0 = []
  list1 = []
  list2 = []
  list3 = []
  while tam < 4:
      a = int(input("Cor do dígito da unidade: "))
      b = int(input("Cor do dígito da dezena: "))
      c = int(input("Cor do dígito da centena: "))
      d = int(input("Cor do dígito da milhar: "))
      e = int(input("Cor do dígito da dezena de milhar: "))
      j = 0
      H = []

      while j < len(join):
         num_str = repr(join[j])
         if (a == 2 and num_str[5] == num_str2[5]) or (a == 3 and num_str[5] != num_str2[5] and (num_str[1] == num_str2[5] or num_str[2] == num_str2[5] or num_str[3] == num_str2[5] or num_str[4] == num_str2[5])) or (a == 4 and num_str[1] != num_str2[5] and num_str[2] != num_str2[5] and num_str[3] != num_str2[5] and num_str[4] != num_str2[5] and num_str[5] != num_str2[5]):
            H.append(join[j])
         j = j+1

      j = 0
      M = []

      while j < len(H):
          num_str = repr(H[j])
          if (b == 2 and num_str[4] == num_str2[4]) or (b == 3 and num_str[4] != num_str2[4] and (num_str[1] == num_str2[4] or num_str[2] == num_str2[4] or num_str[3] == num_str2[4] or num_str[5] == num_str2[4])) or (b == 4 and num_str[1] != num_str2[4] and num_str[2] != num_str2[4] and num_str[3] != num_str2[4] and num_str[4] != num_str2[4] and num_str[5] != num_str2[4]):
           M.append(H[j])
          j = j+1

      j = 0
      N = []

      while j < len(M):
          num_str = repr(M[j])
          if (c == 2 and num_str[3] == num_str2[3]) or (c == 3 and num_str[3] != num_str2[3] and (num_str[1] == num_str2[3] or num_str[2] == num_str2[3] or num_str[5] == num_str2[3] or num_str[4] == num_str2[3])) or (c == 4 and num_str[1] != num_str2[3] and num_str[2] != num_str2[3] and num_str[3] != num_str2[3] and num_str[4] != num_str2[3] and num_str[5] != num_str2[3]):
            N.append(M[j])
          j = j+1

      j = 0
      O = []

      while j < len(N):
          num_str = repr(N[j])
          if (d == 2 and num_str[2] == num_str2[2]) or (d == 3 and num_str[2] != num_str2[2] and (num_str[1] == num_str2[2] or num_str[5] == num_str2[2] or num_str[3] == num_str2[2] or num_str[4] == num_str2[2])) or (d == 4 and num_str[1] != num_str2[2] and num_str[2] != num_str2[2] and num_str[3] != num_str2[2] and num_str[4] != num_str2[2] and num_str[5] != num_str2[2]):
           O.append(N[j])
          j = j+1

      j = 0
      P = []

      while j < len(O):
         num_str = repr(O[j])
         if (e == 2 and num_str[1] == num_str2[1]) or (e == 3 and num_str[1] != num_str2[1] and (num_str[5] == num_str2[1] or num_str[2] == num_str2[1] or num_str[3] == num_str2[1] or num_str[4] == num_str2[1])) or (e == 4 and num_str[1] != num_str2[1] and num_str[2] != num_str2[1] and num_str[3] != num_str2[1] and num_str[4] != num_str2[1] and num_str[5] != num_str2[1]):
            P.append(O[j])
         j = j+1

      if tam == 0:
        list0 = P
      if tam == 1:
        list1 = P
      if tam == 2:
        list2 = P
      if tam == 3:
        list3 = P

      tam = tam+1
      print('Próximo:')
  if tam == 4:
    join = list0+(list1+(list2+list3))
  join2 = join
  join2 = list(dict.fromkeys(join))
  print(join2)
  i = i+1
    
