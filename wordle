import requests
import ast
r = requests.get('https://raw.githubusercontent.com/thiagnascsilva/myprograms/master/listadeprimos2.txt')
r = r.text
K = ast.literal_eval(r)
num_str = repr(K)
k = 0
G = []
while k < 8363:
  j = num_str[5*k] + num_str[5*k+1] + num_str[5*k+2] + num_str[5*k+3] + num_str[5*k+4]
  G.append(j)
  k = k+1
print('Teste 98453 na primeira tentativa.')
print('Sua tentativa.')

i = 0
while i < 6: 
  y = int(input("Dígito seu teste: "))
  print('2 para verde, 3 para amarelo e 4 para preto.')
  num_str2 = repr(y)

  a = int(input("Dígito da unidade: "))
  b = int(input("Dígito da dezena: "))
  c = int(input("Dígito da centena: "))
  d = int(input("Dígito da milhar: "))
  e = int(input("Dígito da dezena de milhar: "))
  j = 0
  H = []

  while j < len(G):
     num_str = repr(G[j])
     if (a == 2 and num_str[5] == num_str2[4]) or (a == 3 and num_str[5] != num_str2[4] and (num_str[1] == num_str2[4] or num_str[2] == num_str2[4] or num_str[3] == num_str2[4] or num_str[4] == num_str2[4])) or (a == 4 and num_str[1] != num_str2[4] and num_str[2] != num_str2[4] and num_str[3] != num_str2[4] and num_str[4] != num_str2[4] and num_str[5] != num_str2[4]):
        H.append(G[j])
     j = j+1

  j = 0
  M = []

  while j < len(H):
      num_str = repr(H[j])
      if (b == 2 and num_str[4] == num_str2[3]) or (b == 3 and num_str[4] != num_str2[3] and (num_str[1] == num_str2[3] or num_str[2] == num_str2[3] or num_str[3] == num_str2[3] or num_str[5] == num_str2[3])) or (b == 4 and num_str[1] != num_str2[3] and num_str[2] != num_str2[3] and num_str[3] != num_str2[3] and num_str[4] != num_str2[3] and num_str[5] != num_str2[3]):
       M.append(H[j])
      j = j+1

  j = 0
  N = []

  while j < len(M):
      num_str = repr(M[j])
      if (c == 2 and num_str[3] == num_str2[2]) or (c == 3 and num_str[3] != num_str2[2] and (num_str[1] == num_str2[2] or num_str[2] == num_str2[2] or num_str[5] == num_str2[2] or num_str[4] == num_str2[2])) or (c == 4 and num_str[1] != num_str2[2] and num_str[2] != num_str2[2] and num_str[3] != num_str2[2] and num_str[4] != num_str2[2] and num_str[5] != num_str2[2]):
        N.append(M[j])
      j = j+1

  j = 0
  O = []

  while j < len(N):
      num_str = repr(N[j])
      if (d == 2 and num_str[2] == num_str2[1]) or (d == 3 and num_str[2] != num_str2[1] and (num_str[1] == num_str2[1] or num_str[5] == num_str2[1] or num_str[3] == num_str2[1] or num_str[4] == num_str2[1])) or (d == 4 and num_str[1] != num_str2[1] and num_str[2] != num_str2[1] and num_str[3] != num_str2[1] and num_str[4] != num_str2[1] and num_str[5] != num_str2[1]):
       O.append(N[j])
      j = j+1

  j = 0
  P = []

  while j < len(O):
     num_str = repr(O[j])
     if (e == 2 and num_str[1] == num_str2[0]) or (e == 3 and num_str[1] != num_str2[0] and (num_str[5] == num_str2[0] or num_str[2] == num_str2[0] or num_str[3] == num_str2[0] or num_str[4] == num_str2[0])) or (e == 4 and num_str[1] != num_str2[0] and num_str[2] != num_str2[0] and num_str[3] != num_str2[0] and num_str[4] != num_str2[0] and num_str[5] != num_str2[0]):
        P.append(O[j])
     j = j+1
  print(P)
  G = P
  i = i+1
